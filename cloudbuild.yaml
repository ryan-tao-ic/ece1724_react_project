steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/eventhub:$COMMIT_SHA', './event-hub']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/eventhub:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'ece1724-react-project'
      - '--image'
      - 'gcr.io/$PROJECT_ID/eventhub:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - '$PROJECT_ID:us-central1:eventhub-dev'
      - '--set-env-vars'
      - 'DATABASE_URL=postgresql://postgres:ece1724@/eventhub?host=/cloudsql/$PROJECT_ID:us-central1:eventhub-dev,JWT_SECRET=production-jwt-secret-key,STORAGE_BUCKET_NAME=$PROJECT_ID-eventhub-storage,NEXT_PUBLIC_APP_URL=https://ece1724-react-project-$PROJECT_ID.a.run.app'

  # Apply database migrations
  - name: 'gcr.io/cloud-builders/npm'
    dir: 'event-hub'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install
        npx prisma generate
        npx prisma migrate deploy
    env:
      - 'DATABASE_URL=postgresql://postgres:ece1724@/eventhub?host=/cloudsql/$PROJECT_ID:us-central1:eventhub-dev'

images:
  - 'gcr.io/$PROJECT_ID/eventhub:$COMMIT_SHA'

timeout: '1800s'